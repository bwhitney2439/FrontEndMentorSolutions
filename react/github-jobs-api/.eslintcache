[{"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\index.js":"1","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\App.jsx":"2","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Toggle.jsx":"3","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Header.jsx":"4","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Filter.jsx":"5","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Card.jsx":"6","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\JobInfo.jsx":"7","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Modal.jsx":"8","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\hooks\\useMedia.js":"9","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\CardList.jsx":"10","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\theme.js":"11","D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\GlobalStyles.js":"12"},{"size":703,"mtime":1612654731905,"results":"13","hashOfConfig":"14"},{"size":603,"mtime":1612653424697,"results":"15","hashOfConfig":"14"},{"size":1017,"mtime":1612652538076,"results":"16","hashOfConfig":"14"},{"size":945,"mtime":1612649137055,"results":"17","hashOfConfig":"14"},{"size":7846,"mtime":1612722855932,"results":"18","hashOfConfig":"14"},{"size":3140,"mtime":1612723543293,"results":"19","hashOfConfig":"14"},{"size":8866,"mtime":1612723562143,"results":"20","hashOfConfig":"14"},{"size":1081,"mtime":1612655003136,"results":"21","hashOfConfig":"14"},{"size":1350,"mtime":1612304023107,"results":"22","hashOfConfig":"14"},{"size":3295,"mtime":1612658073606,"results":"23","hashOfConfig":"14"},{"size":374,"mtime":1612718788345,"results":"24","hashOfConfig":"14"},{"size":1232,"mtime":1612655052659,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16fm99c",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\index.js",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\App.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Toggle.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Header.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Filter.jsx",["52"],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Card.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\JobInfo.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\Modal.jsx",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\hooks\\useMedia.js",["53"],"import { useEffect, useState } from \"react\";\r\n\r\nexport const useMedia = (queries, values, defaultValue) => {\r\n  // Array containing a media query list for each query\r\n  const mediaQueryLists = queries.map((q) => window.matchMedia(q));\r\n\r\n  // Function that gets value based on matching media query\r\n  const getValue = () => {\r\n    // Get index of first media query that matches\r\n    const index = mediaQueryLists.findIndex((mql) => mql.matches);\r\n    // Return related value or defaultValue if none\r\n    return typeof values[index] !== \"undefined\" ? values[index] : defaultValue;\r\n  };\r\n\r\n  // State and setter for matched value\r\n  const [value, setValue] = useState(getValue);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Event listener callback\r\n      // Note: By defining getValue outside of useEffect we ensure that it has ...\r\n      // ... current values of hook args (as this hook callback is created once on mount).\r\n      const handler = () => setValue(getValue);\r\n      // Set a listener for each media query with above handler as callback.\r\n      mediaQueryLists.forEach((mql) => mql.addListener(handler));\r\n      // Remove listeners on cleanup\r\n      return () =>\r\n        mediaQueryLists.forEach((mql) => mql.removeListener(handler));\r\n    },\r\n    [] // Empty array ensures effect is only run on mount and unmount\r\n  );\r\n\r\n  return value;\r\n};\r\n",["54","55"],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\components\\CardList.jsx",["56","57"],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\theme.js",[],"D:\\FrontendMentorSolutions\\FrontEndMentorSolutions\\react\\github-jobs-api\\src\\GlobalStyles.js",[],{"ruleId":"58","severity":1,"message":"59","line":234,"column":11,"nodeType":"60","messageId":"61","endLine":234,"endColumn":19},{"ruleId":"62","severity":1,"message":"63","line":30,"column":5,"nodeType":"64","endLine":30,"endColumn":7,"suggestions":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"58","severity":1,"message":"70","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"71","line":58,"column":5,"nodeType":"60","messageId":"61","endLine":58,"endColumn":10},"no-unused-vars","'useModal' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getValue' and 'mediaQueryLists'. Either include them or remove the dependency array.","ArrayExpression",["72"],"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"'useMedia' is defined but never used.","'error' is assigned a value but never used.",{"desc":"75","fix":"76"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getValue, mediaQueryLists]",{"range":"77","text":"78"},[1254,1256],"[getValue, mediaQueryLists]"]